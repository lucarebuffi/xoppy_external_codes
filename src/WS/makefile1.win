# --------------------------------------------------------------
#
#	gmake 
#	gmake install	 [install target in the XOP bin directory]
#	gmake clean	 [clean the source directory]
#	RJD, ANL, November 7, 2013
#
#
# --------------------------------------------------------------
#
# System definition (architecture)
#
ARCH := x86

#CPP = cpp
#vpath %.f ../

#************** PLATFORM DEPENDENT VARIABLES **************
#
# flags for windows 64-bit targets
#
FC = gfortran
FFLAGS = -O -m64
FFLAGSD = -DDEBUG1 -g -m64
LDFLAGS = -static-libgfortran -static-libgcc
#
#**************************************************************
# Sources and Targets
src = ws.f fk.f fkl.f gy.f k13.f k23.f polint.f qromb8.f trapzd8.f
targets = ws.exe
targetd = wsd.exe

targets := $(ARCH)/$(targets)
targetd := $(ARCH)/$(targetd)
objects = $(patsubst %.f,$(ARCH)/%.o,$(src)) 
objectd = $(patsubst %.f,$(ARCH)/%.do,$(src)) 

# Rules
.PHONY: ws wsd
#all: ws wsd

ws: | $(targets)
wsd: | $(targetd)
#**************************************************************

$(targets): $(objects)
#	@echo $^ 
	$(FC) $(FFLAGS) $^ -o $@ $(LDFLAGS)

$(targetd): $(objectd)
	$(FC) $(FFLAGSD) $^ -o $@ $(LDFLAGS)

# Pattern Rules
$(ARCH)/%.o : %.f
#	@echo $< 
	$(FC) -c $(FFLAGS) $(INCLUDES) $< -o $@

$(ARCH)/%.o : %.F
	$(FC) -c $(FFLAGS) $(INCLUDES) $< -o $@

$(ARCH)/%.do : %.f
	$(FC) -c $(FFLAGSD) $(INCLUDES) $< -o $@

$(objects): | $(ARCH)
$(objectd): | $(ARCH)

$(ARCH):
# gnuWin32 mkdir does not recoginize options (bug)
#	@mkdir -p $@
	@mkdir $@

# Installation in XOP bin directory
install:
#	/bin/cp -i $(targets) ../../../bin.$(targets)
	cp -pi $(targets) ..\..\..\bin.$(targets)

#  Clean up
clean:
# gnuWin32 rm gives an error for *.trace
#	$(RM) $(targets) $(targetd) $(objects) $(objectd) core *~ *.trace
	$(RM) $(targets) $(targetd) $(objects) $(objectd) core *~
