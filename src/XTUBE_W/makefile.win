# --------------------------------------------------------------
#
#	gmake -f makefile.win all
#	gmake -f makefile.win install	 [install target in the XOP bin directory]
#	gmake -f makefile.win clean	 [clean the source directory]
#	RJD, ANL, November 21, 2013
#
#
# --------------------------------------------------------------
#
# System definition (architecture)
#
ARCH := x86

#CPP = cpp
#vpath %.c ../

#************** PLATFORM DEPENDENT VARIABLES **************
#
# flags for windows 64-bit targets
#
CC = gcc
CFLAGS = -O -m64
CFLAGSD = -DDEBUG1 -g -m64
LDFLAGS = -static-libgcc
#
#**************************************************************
# Sources and Targets
src = genspec1.c test1.c

targets = genspec1.exe
targets_new = tasmip.exe
targetd = genspec1d.exe
targetd_new = tasmipd.exe
targets := $(ARCH)/$(targets)
targetd := $(ARCH)/$(targetd)
targets_new := $(ARCH)/$(targets_new)
targetd_new := $(ARCH)/$(targetd_new)
objects = $(patsubst %.c,$(ARCH)/%.o,$(src)) 
objectd = $(patsubst %.c,$(ARCH)/%.do,$(src)) 

# Rules
.PHONY: all alld genspec1

genspec1: | $(targets)
genspec1d: | $(targetd)

all:  | $(targets)
alld: | $(targetd)
#**************************************************************

$(targets): $(objects)
#	@echo $^ 
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)
	mv $@  $(targets_new)

$(targetd): $(objectd)
	$(CC) $(CFLAGSD) $^ -o $@ $(LDFLAGS)
	mv $@  $(targetd_new)

# Pattern Rules
$(ARCH)/%.o : %.c
#	@echo $< 
	$(CC) -c $(CFLAGS) $(INCLUDES) $< -o $@

$(ARCH)/%.do : %.c
	$(CC) -c $(CFLAGSD) $(INCLUDES) $< -o $@

$(objects) : | $(ARCH)
$(objectd) : | $(ARCH)

$(ARCH):
#gnuWin32 mkdir does not recoginize options (bug)
#	@mkdir -p $@
	@mkdir $@

# Installation in XOP bin directory
install:
	cp -pi $(targets_new) ../../bin.$(targets_new)

#  Clean up
clean:
	$(RM) $(targets) $(targetd) $(objects) $(objectd) $(targets_new) $(targetd_new)
	$(RM) core *~ *.trace
